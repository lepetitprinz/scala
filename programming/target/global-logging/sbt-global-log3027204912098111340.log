[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.0 (AdoptOpenJDK Java 1.8.0_292)
[debug] Load.defaultLoad until apply took 124.15575ms
[debug]           Load.loadUnit: plugins took 94.143333ms
[debug]           Load.loadUnit: defsScala took 0.603542ms
[debug] [Loading] Scanning directory /Users/yjkim-studio/src/scala/programming/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/yjkim-studio/src/scala/programming/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.920333 ms
[debug]               Load.resolveProject(programming-build) took 53.982625ms
[debug]             Load.loadTransitive: finalizeProject(Project(id programming-build, base: /Users/yjkim-studio/src/scala/programming/project, plugins: List(<none>))) took 101.640708ms
[debug] [Loading] Done in /Users/yjkim-studio/src/scala/programming/project, returning: (programming-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 125.949084ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.69275ms
[debug]         Load.loadUnit(file:/Users/yjkim-studio/src/scala/programming/project/, ...) took 230.0625ms
[debug]       Load.apply: load took 1626.46425ms
[debug]       Load.apply: resolveProjects took 6.137291ms
[debug]       Load.apply: finalTransforms took 103.456583ms
[debug]       Load.apply: config.delegates took 6.174875ms
[debug]       Load.apply: Def.make(settings)... took 1185.129959ms
[debug]       Load.apply: structureIndex took 292.253292ms
[debug]       Load.apply: mkStreams took 1.149792ms
[info] loading project definition from /Users/yjkim-studio/src/scala/programming/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 18655.197916ms
[debug]     Load.loadUnit: defsScala took 0.00475ms
[debug] [Loading] Scanning directory /Users/yjkim-studio/src/scala/programming
[debug]       Load.loadUnit: mkEval took 17.703417ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.086584 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 15.1125ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: /Users/yjkim-studio/src/scala/programming, plugins: List(<none>))) took 27.908333ms
[debug] [Loading] Done in /Users/yjkim-studio/src/scala/programming, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 5088.659791ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.985666ms
[debug]   Load.loadUnit(file:/Users/yjkim-studio/src/scala/programming/, ...) took 23761.576958ms
[debug] Load.apply: load took 23794.277542ms
[debug] Load.apply: resolveProjects took 0.752458ms
[debug] Load.apply: finalTransforms took 29.883875ms
[debug] Load.apply: config.delegates took 3.271291ms
[debug] Load.apply: Def.make(settings)... took 437.280791ms
[debug] Load.apply: structureIndex took 63.81275ms
[debug] Load.apply: mkStreams took 0.002583ms
[info] set current project to programming (in build file:/Users/yjkim-studio/src/scala/programming/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:///Users/yjkim-studio/.sbt/1.0/server/9f690c9a2369009be1d1/sock
[debug] Writing bsp connection file
[info] started sbt server
